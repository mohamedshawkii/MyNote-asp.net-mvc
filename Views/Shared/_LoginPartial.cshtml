@using Microsoft.AspNetCore.Identity
@using HelloWorld.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" >
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
    @* asp-route-returnUrl="@Url.Action("Login", "Account", new { area = "Identity" })" *@
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
<script>
    document.getElementById("logoutForm").addEventListener("click", function () {
        // Perform any client-side logout logic if necessary (e.g., clearing local storage)

        // Redirect to the desired link
        window.location.href = "https://localhost:7009/Identity/Account/Logout";
    });
</script>